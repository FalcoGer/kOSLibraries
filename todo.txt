misc scripts:

- restore events after reboot
    save events to file
    restore file
    have event names and function names in an lexicon.

aircraft:
- fly to waypoint
- autoland:
    PID throttle for AoA keeping
    PID pitch for glide slope keeping (3°, VVI should point at landing point)
    PID roll for 0 roll keeping
    PID yaw for heading keeping to touchdown
    check bounding box for ground contact
    throttle 0, use yaw PID to keep runway heading, full brakes, unlock pitch
- auto T/O
    set throttle to 1
    PID roll for 0 roll keeping
    PID yaw for centerline keeping
    PID pitch at T/O speed for 3° up
- set altitude       (pid -> pitch (limit AoA, limit pitchup))
- set heading        (pid -> roll (limit roll angle))
- set speed          (pid -> (lots of) negative means speed brakes?)
- set vertical speed (PID -> pitch (limit AoA, limit pitchup))
- SSTO?

maneuver scripts:
orbital:
- change AP/PA
- efficient inclination change with circularization or returning to original orbit
- orbital period change
- do contract orbit (enter arguments from contracts)
    use lambert solver -> intercept target?
- calculate time for fixed dV maneuver with staging
- go to child body, possibly with inclination and pereapsis height

body:
- descend guidance
- landing descend (PID controller controlling vertical speed (via TWR adjusted for ship tilt)), avoid slopes by follow slopes up or down by pointing towards the slope angle
- surface descend steering: lock steering to lookdirup(up:vector * g + deltaVelocity) where deltaVelocity is locked to desiredVelocity - surfaceVelocity
  this allows together with the vertical speed PID to steer.
- landing w/ coordinates
- time to suicide burn (use fixed dv maneuver time, calculate speed at different heights, equate, solve for height)
- time to impact: d = v0 * t + (a*t^2)/2, solve for t: t = (SQRT(v^2 + 2*g*d) - v) / g     ; where v = initial velocity, g = surface gravity, d = distance to surface.

target:


notes:
SMA: Semi Major Axis: Average distance PA and AP from center of body (not sea level), determines orbital period
for transfers and orbit changes, make sure to avoid body encounters
for hill climbing or genetic algorithm aproaches make sure to not crash into a body.
for hill climbing with gravity assist, add maneuver after SOI change back to parent body with 4DOF (time, pro, rad, norm)
hill climbing for maneuvers can be done with CREATEORBIT(pos, vel, body, ut), so nodes need not be created.
  this will however not calculate SOI changes.
